---
- name: Install packages
  become: yes
  package:
    name:
      - bash-completion
      - git
      - python3-pip
      - tmux
      - vim

- name: Install RedHat specific packages
  become: yes
  dnf:
    name:
      - iproute
      - iptables-utils
  when: ansible_os_family == 'RedHat'

- name: Install Fedora specific packages
  become: yes
  dnf:
    name:
        - bat
        - git-delta
        - fd-find
        - fzf
  when: ansible_facts['distribution'] == "Fedora"

- name: Configure Python debug server variables
  lineinfile:
    path: ".bashrc"
    line: "{{ item }}"
  with_items:
    - export DEBUGGER_TYPE=pydev
    - export DEBUGGER_PORT=9999
    - export DEBUGGER_HOST=192.168.122.1

- name: Configure time sync
  become: yes
  lineinfile:
    path: /etc/cron.hourly/chronyc
    create: yes
    line: sudo chronyc makestep
    mode: 0755
  when: ansible_os_family == 'RedHat'

- name: Sync time
  become: yes
  command: "{{ item }}"
  with_items:
    - chronyc 'burst 4/4'
    - chronyc makestep
  when: ansible_os_family == 'RedHat'

- name: Create Git clones
  git:
    repo: "https://opendev.org/openstack/{{ item }}.git"
    dest: "{{ item }}"
    update: no
    depth: 5
  with_items:
    - devstack
    - neutron
  tags: devstack

- name: Copy local.conf
  template:
    src: local.conf.j2
    dest: devstack/local.conf
    force: no
  tags: devstack

- name: Copy restack.sh
  copy:
    src: restack.sh
    dest: devstack/restack.sh
    mode: '0755'
  tags: devstack

- name: Copy .tmux.conf and .gitconfig
  copy:
    src: "{{ item }}"
    dest: "{{ item }}"
  ignore_errors: True
  with_items:
    - ~/.tmux.conf
    - ~/.gitconfig

- name: Copy test_server.bin
  copy:
    src: "{{ ds_test_server_path }}"
    dest: "~/test_server.bin"
    mode: '0755'
  ignore_errors: True

- name: Create ~/scripts
  become: yes
  file:
    path: "~/scripts"
    state: directory
    owner: "stack"
  tags: devstack

- name: Copy ~/scripts/maketestcerts.sh
  copy:
    src: "maketestcerts.sh"
    dest: "~/scripts/maketestcerts.sh"
    mode: '0755'

- name: Copy ~/scripts/openssl.cnf
  copy:
    src: "openssl.cnf"
    dest: "~/scripts/openssl.cnf"
    mode: '0644'

- name: Create /opt/stack
  become: yes
  file:
    path: /opt/stack
    state: directory
    owner: "stack"
  tags: devstack

- name: For compatibility with some scripts create hard link /mnt/host
  become: yes
  ansible.builtin.file:
    src: /opt/stack
    dest: /mnt/host
    owner: "stack"
    state: link
  tags: devstack

- name: Synchronize local development files
  synchronize:
    src: "~/openstack/{{ item }}"
    dest: "/opt/stack/"
    rsync_opts:
      - "--exclude=.tox"
  with_items: "{{ ds_sync_folders }}"
  tags: devstack

- name: Install os-log-merger
  become: yes
  pip:
    name: os-log-merger
    executable: pip
  tags: devstack

- name: Install helper scripts
  become: yes
  pip:
    chdir: /opt/stack/devstack-helpers
    editable: yes
    name: .
    executable: pip
  tags: devstack

- name: Run restack.sh
  command:
    chdir: devstack/
    cmd: ./restack.sh
  tags: devstack

- name: Install bash completion
  become: yes
  shell:
    cmd: openstack complete > /etc/bash_completion.d/osc.bash_completion
    creates: /etc/bash_completion.d/osc.bash_completion
  tags: devstack
